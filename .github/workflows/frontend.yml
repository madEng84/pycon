name: Frontend

on:
  pull_request:
    paths:
    - '.github/workflows/*'
    - 'backend/**/*'
    - 'backend/*'
    - 'frontend/**/*'
    - 'frontend/*'
    - 'netlify.toml'

jobs:
  eslint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: ESLint checks
      uses: ./.github/eslint-action
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-and-preview:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7.4'
    - run: pip install poetry invoke
    - name: Setup
      run: invoke setup
    - run: |
        invoke demo-data
        invoke run-backend &
        invoke build
      env:
        SECRET_KEY: demo
        AWS_MEDIA_BUCKET: demo
        DEFAULT_FILE_STORAGE: 'django.core.files.storage.FileSystemStorage'
        CONFERENCE_CODE: "pycon-demo"
        DEBUG: True
        DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports['5432'] }}/postgres
    - run: yarn codegen
      working-directory: frontend
    - run: yarn tsc
      working-directory: frontend
    - uses: netlify/actions/cli@master
      with:
        args: deploy --dir=frontend/public
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  preview-docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7.4'
    - run: pip install invoke
    - run: invoke build-styleguide
    - uses: netlify/actions/cli@master
      with:
        args: deploy --dir=frontend/.docz/dist
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_DOCS }}
